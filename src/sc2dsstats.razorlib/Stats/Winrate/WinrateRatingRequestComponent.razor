@using pax.dsstats.shared
<div class="row">
    <div class="col-auto" style="width: 175px;">
        <label class="form-label">
            From Rating @(fromRating == Data.MaxBuildRating ? $"{Data.MaxBuildRating}+" : $"{fromRating}")
            <input type="range" class="form-range" value="@(fromRating)" min="@Data.MinBuildRating" max="@Data.MaxBuildRating"
                   step="50" id="spawnrange" @oninput="FromRatingChange">
        </label>
    </div>
    <div class="col-auto" style="width: 175px;">
        <label class="form-label">
            To Rating @(toRating >= Data.MaxBuildRating ? $"{Data.MaxBuildRating}+" : $"{toRating}")
            <input type="range" class="form-range" value="@(toRating)" min="@Data.MinBuildRating" max="@Data.MaxBuildRating"
                   step="50" id="spawnrange" @oninput="ToRatingChange">
        </label>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-sm btn-outline-warning" @onclick="RequestRange">Set Range</button>
        <div class="btn-group">
            <button type="button" class="btn btn-sm btn-outline-info" @onclick="@(() => { fromRating = 500; toRating = 950;})">Learners</button>
            <button type="button" class="btn btn-sm btn-outline-info" @onclick="@(() => { fromRating = 950; toRating = 1150;})">Average</button>
            <button type="button" class="btn btn-sm btn-outline-info" @onclick="@(() => { fromRating = 1150; toRating = 1500;})">Advanced</button>
            <button type="button" class="btn btn-sm btn-outline-info" @onclick="@(() => { fromRating = 1500; toRating = 2500;})">Top</button>
        </div>
    </div>
</div>
@code {
    [CascadingParameter]
    public WinrateRequest Request { get; set; } = default!;

    [Parameter]
    public EventCallback OnRangeSelected { get; set; }

    private int fromRating;
    private int toRating;

    protected override void OnInitialized()
    {
        fromRating = Request.FromRating == 0 ? Data.MinBuildRating : Request.FromRating;
        toRating = Request.ToRating == 0 ? Data.MaxBuildRating : Request.ToRating;
        base.OnInitialized();
    }

    private void RequestRange()
    {
        Request.FromRating = fromRating;
        Request.ToRating = toRating;
        OnRangeSelected.InvokeAsync();
    }

    private void FromRatingChange(ChangeEventArgs e)
    {
        if (e.Value is string value && int.TryParse(value, out int intvalue))
        {
            fromRating = intvalue;
            if (toRating <= fromRating)
            {
                toRating = fromRating + 50;
            }
        }
    }

    private void ToRatingChange(ChangeEventArgs e)
    {
        if (e.Value is string value && int.TryParse(value, out int intvalue))
        {
            toRating = intvalue;
            if (toRating <= fromRating)
            {
                toRating = fromRating + 50;
            }
        }
    }
}