@using pax.dsstats.shared;
@using Microsoft.AspNetCore.Components.Forms;
@inject NavigationManager NavigationManager
@implements IDisposable;

<EditForm EditContext="editContext">
    <div class="row">
@*        <div class="col-auto">
            <label class="form-label">
                StatsMode
                <span class="oi oi-info pointer ms-2" onclick="window.location.href='https://github.com/ipax77/dsstats/wiki#statsmode'"></span>
                <select class="form-select" @onchange="ChangeMode">
                    @foreach (StatsMode statsMode in Enum.GetValues(typeof(StatsMode)))
                    {
                        @if ((int)statsMode > 0)
                        {
                            @if (statsMode == StatsMode.Timeline)
                            {
                                <option value="@statsMode" selected>@statsMode</option>
                            }
                            else
                            {
                                <option value="@statsMode">@statsMode</option>
                            }
                        }
                    }
                </select>
            </label>
        </div>*@
        <div class="col-auto">
            <label class="form-label">
                Time Period
                <InputSelect class="form-select" @bind-Value="Request.TimePeriod">
                    @foreach (TimePeriod time in Data.GetTimePeriods(Data.TimePeriodGet.NoNone))
                    {
                        <option value="@time">@Data.GetTimePeriodLongName(time)</option>
                    }
                </InputSelect>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Type
                <InputSelect class="form-select" @bind-Value="Request.RatingType">
                    <option value="@RatingType.Cmdr">Commanders</option>
                    <option value="@RatingType.Std">Standard</option>
                    <option value="@RatingType.CmdrTE">Commanders TE</option>
                    <option value="@RatingType.StdTE">Standard TE</option>
                </InputSelect>
            </label>
        </div>
        <div class="col-auto">
            <div class="d-flex">
                <div class="form-check form-switch">
                    <label class="form-check-label">
                        DefaultFilter
                        <input type="checkbox" checked disabled class="form-check-input" />
                    </label>
                </div>
                <div class="ms-2">
                    <span class="oi oi-info pointer" onclick="window.location.href='https://github.com/ipax77/dsstats/wiki#default-filter'"></span>
                </div>
            </div>
            @if (!Data.IsMaui)
            {
                <div class="d-flex">
                    <div class="form-check form-switch">
                        <label class="form-check-label">
                            ComboRatings
                            <InputCheckbox class="form-check-input" @bind-Value="Request.ComboRating">
                            </InputCheckbox>
                        </label>
                    </div>
                    <div class="ms-2">
                        <span class="oi oi-info pointer"
                              onclick="window.location.href='https://github.com/ipax77/dsstats/wiki/ComboRatings'">
                        </span>
                    </div>
                </div>

            }
        </div>
    </div>
</EditForm>

@*<h3>Weights</h3>
<EditForm EditContext="weightContext" OnValidSubmit="OnRequestChanged">
    <div class="row">
        <div class="col-auto">
            <label class="form-label">
                Average rating gain
                <InputNumber class="form-control" @bind-Value="Request.Weights.WeightGain"></InputNumber>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Average rating
                <InputNumber class="form-control" @bind-Value="Request.Weights.WeightRating"></InputNumber>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Average player rating difference
                <InputNumber class="form-control" @bind-Value="Request.Weights.WeightPlDiff"></InputNumber>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Average team rating difference
                <InputNumber class="form-control" @bind-Value="Request.Weights.WeightTeamDiff"></InputNumber>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Winrate
                <InputNumber class="form-control" @bind-Value="Request.Weights.WeightWinrate"></InputNumber>
            </label>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-sm btn-secondary">Send</button>
        </div>
    </div>
</EditForm>
*@
@code {
    [CascadingParameter]
    public TimelineRequest Request { get; set; } = default!;
    EditContext editContext = null!;

    [Parameter]
    public EventCallback OnRequestChanged { get; set; }

    EditContext weightContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(Request);
        weightContext = new(Request.Weights);
        editContext.OnFieldChanged += FieldChanged;
        base.OnInitialized();
    }

    private void FieldChanged(object? sender, FieldChangedEventArgs e)
    {
        OnRequestChanged.InvokeAsync();
    }

    private void ChangeMode(ChangeEventArgs e)
    {
        NavigationManager.NavigateTo($"/stats?StatsMode={e.Value}");
    }

    public void Dispose()
    {
        editContext.OnFieldChanged -= FieldChanged;
    }

}