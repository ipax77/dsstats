@page "/ratings"
@page "/comboratings"
@using dsstats.shared
@inject NavigationManager NavigationManager

<PageTitle>dsstats - ratings</PageTitle>
<dsstats.razorlib.Players.ComboRatingsComponent Request="ratingsRequest" OnRequestChanged="SetUrl" />

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? PlayerId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Mode { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public bool? Combo { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public bool? Arcade { get; set; }

    private RatingsRequest ratingsRequest = new()
    {
        Type = shared.RatingType.Cmdr,
        Skip = 0,
        Take = 20,
        ComboRating = true,
        Orders = new()
        {
            new()
            {
                Property = "Rating",
                Ascending = false
            },
        },
        Uploaders = true
    };

    protected override void OnInitialized()
    {
        SetRequest();
        base.OnInitialized();
    }

    private void SetRequest()
    {
        if (!string.IsNullOrEmpty(PlayerId))
        {
            ratingsRequest.PlayerId = Data.GetPlayerId(PlayerId);
        }

        if (!String.IsNullOrEmpty(Mode) 
            && Enum.TryParse(typeof(RatingType), Mode, out var ratingTypeObject))
        {
            if (ratingTypeObject is RatingType ratingType)
            {
                ratingsRequest.Type = ratingType;
            }
        }

        if (Combo is not null)
        {
            ratingsRequest.ComboRating = Combo.Value;
        }

        if (Arcade is not null)
        {
            ratingsRequest.Arcade = Arcade.Value;
        }
    }

    private void SetUrl(RatingsRequest request)
    {
        Dictionary<string, object?> queryDic = new();

        queryDic.Add("PlayerId", Data.GetPlayerIdString(request.PlayerId));

        if (request.Type != shared.RatingType.Cmdr)
        {
            queryDic.Add("Mode", request.Type.ToString());
        }
        else
        {
            queryDic.Add("Mode", null);
        }

        if (!request.ComboRating)
        {
            queryDic.Add("Combo", request.ComboRating);
        }
        else
        {
            queryDic.Add("Combo", null);
        }

        if (request.Arcade)
        {
            queryDic.Add("Arcade", request.Arcade);
        }
        else
        {
            queryDic.Add("Arcade", null);
        }

        NavigationManager.NavigateTo(
            NavigationManager.GetUriWithQueryParameters(
                new Dictionary<string, object?>(queryDic)
            )
        );
    }
}
