@using System.Globalization;
@using sc2dsstats.maui.Services;
<div class="top-row bg-secondary px-4">
    <div>
        <span class="oi @(!showRatings ? "oi-chevron-top" : "oi-chevron-bottom") pointer me-2" @onclick="@(() => showRatings = !showRatings)"></span>
    </div>
    <span class="pointer badge bg-info px-1 me-1"
        style="height: 80% !important; padding: 1rem 0; font-size: 1em;"
        @onclick="@(() => { navigationManager.NavigateTo("replays"); })">
        Replays: @decodeService.DbReplays
    </span>
    <span class="pointer badge @(decodeService.NewReplays == 0 ? "bg-success" : "bg-warning") px-1 me-1"
        style="height: 80% !important; padding: 1rem 0; font-size: 1em;"
        @onclick="StartDecoding">
        New Replays: @decodeService.NewReplays
    </span>

    @if (decodeEventArgs != null)
    {
        @if (decodeEventArgs.Error > 0)
        {
            <span class="badge bg-danger px-1 me-1 pointer" style="height: 80% !important; padding: 1rem 0; font-size: 1em;" data-bs-toggle="modal" @onclick="e => decodeErrorModal?.Show()">
                Replays failed: @decodeEventArgs.Error
            </span>
        }
        @if (!decodeEventArgs.Done)
        {
            <div class="position-relative me-1" style="width: 300px; height: 70% !important; font-size: 1em; padding-top: 0.2rem; padding-bottom: 1rem;">
                <div class="text-success" style="font-size: 1em;">
                    Replays decoded: @decodeEventArgs.Decoded
                </div>
                <div class="position-absolute w-100" style="height: 1rem;">
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                                role="progressbar"
                                aria-label="Decode process"
                                aria-valuenow="@(decodeEventArgs.Decoded)"
                                aria-valuemin="0"
                                aria-valuemax="@decodeEventArgs.Total"
                                style="width: @(Math.Round(decodeEventArgs.Decoded * 100.0 / decodeEventArgs.Total, 2).ToString(CultureInfo.InvariantCulture))%;">
                            @(Math.Round(decodeEventArgs.Decoded * 100.0 / decodeEventArgs.Total, 2))%
                        </div>
                    </div>
                </div>
            </div>

        }
        else if (decodeEventArgs.Done)
        {
            <span class="badge bg-success px-1 me-1" style="height: 80% !important; padding: 1rem 0; font-size: 1em;">Replays Decoded: @decodeEventArgs.Decoded</span>
        }
        <span class="badge bg-info px-1" style="height: 80% !important; padding: 1rem 0; font-size: 1em;">
            Elapsed: @elapsed.ToString(@"hh\:mm\:ss")
            @if (eta != TimeSpan.Zero)
            {
                @($" ETA: {eta.ToString(@"hh\:mm\:ss")}")
            }
        </span>
    }

    @if (uploadStatus != UploadStatus.None)
    {
        <div class="text-white-50 px-1">
            @if (uploadStatus == UploadStatus.Uploading)
            {
                <span class="oi spinner-grow spinner-grow-sm text-success"> </span> @("Uploading")
            }
            else if (uploadStatus == UploadStatus.Success)
            {
                <span class="oi oi-circle-check text-success">&nbsp;</span> @("Upload successful")
            }
            else if (uploadStatus == UploadStatus.Error)
            {
                <span class="oi oi-circle-x text-danger">&nbsp;</span> @("Upload failed. Please try again later.")
            }
            else if (uploadStatus == UploadStatus.Forbidden)
            {
                <span class="oi oi-circle-x text-danger">&nbsp;</span> @("Upload forbidden due to Disable/Delete.")
            }
        </div>
    }

    <div class="ms-auto">
        @if (updateProgress > 0)
        {
            <div class="progress" style="width: 150px;">
                <div class="progress-bar bg-success text-warning" role="progressbar" aria-label="Update progress" style="width: @(updateProgress)%" aria-valuenow="@updateProgress" aria-valuemin="0" aria-valuemax="100">
                    Update
                </div>
            </div>
        }
        else
        {
            @if (UpdateService.NewVersion > UpdateService.CurrentVersion)
            {
                <button type="button" class="btn btn-outline-danger" @onclick="e => CheckForStoreUpdates()">New Version Available!</button>
            }
            else
            {
                <button type="button" class="btn btn-outline-light" @onclick="e => CheckForStoreUpdates()">Check for Updates</button>
            }
        }
        <span class="badge bg-light px-1" style="height: 50% !important; padding: 0.5rem 0; font-size: 1em;">
            v@(UpdateService.CurrentVersion)
        </span>
    </div>
</div>
<div class="@(showRatings ? "" : "visually-hidden")">
    <TopRowRatings @ref="topRowRatings"></TopRowRatings>
</div>
<DecodeErrorModal @ref="decodeErrorModal"></DecodeErrorModal>
<UploadQuestionModal @ref="uploadQuestionModal"></UploadQuestionModal>

@code {
    TopRowRatings? topRowRatings;
    DecodeErrorModal? decodeErrorModal;
    UploadQuestionModal? uploadQuestionModal;
}
