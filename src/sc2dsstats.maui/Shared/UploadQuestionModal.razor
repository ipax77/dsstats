@using sc2dsstats.maui.Services;
@inject UploadService UploadService
@inject IJSRuntime jsRuntime
@inject UserSettingsService UserSettingsService

<div id="uploadQuestionModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bgchart2">
                <h5 class="modal-title">Thank you for using this app!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bgchart">
                <p>
                    If you love Direct Strike and like to help balance the game it would be very nice if the statistics were uploaded from time to time.
                </p>
                <p>
                    Would you like to allow the application to upload your Direct Strike replay data to the <a href="https://dsstats.pax77.org">dsstats website</a>?
                </p>
                <div class="btn-group">
                    <button class="btn btn-primary" @onclick="AllowUploads">Allow Uploads</button>
                </div>
            </div>
            <div class="modal-footer bgchart2">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public void Show()
    {
        jsRuntime.InvokeVoidAsync("ReplayModalOpen", "uploadQuestionModal");
    }

    private async void AllowUploads()
    {
        UserSettingsService.UserSettings.AllowCleanUploads = true;
        UserSettingsService.UserSettings.AllowUploads = true;
        UserSettingsService.UserSettings.AutoScanForNewReplays = true;
        await UserSettingsService.Save();
        _ = UploadService.UploadReplays();
        await jsRuntime.InvokeVoidAsync("ReplayModalClose");
    }
}
