@using System.Globalization;
@using dsstats.shared;
@using dsstats.shared.Extensions;
@using dsstats.razorlib.Services;

<div class="tableFixHead" style="width: 900px; max-height: 800px;">
    <table class="tptable table">
        <thead>
            <tr style="user-select: none;">
                <CascadingValue Value="tableOrders">
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.Commander))">
                        <SortArrow Property="@nameof(SynergyEnt.Commander)">
                            @nameof(SynergyEnt.Commander)
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.Teammate))">
                        <SortArrow Property="@nameof(SynergyEnt.Teammate)">
                            @nameof(SynergyEnt.Teammate)
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.AvgGain))">
                        <SortArrow Property="@nameof(SynergyEnt.AvgGain)">
                            @nameof(SynergyEnt.AvgGain)
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="@(e => SetOrder(e, "Winrate"))">
                        <SortArrow Property="Winrate">
                            Winrate
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.Count))">
                        <SortArrow Property="@nameof(SynergyEnt.Count)">
                            @nameof(SynergyEnt.Count)
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.AvgRating))">
                        <SortArrow Property="@nameof(SynergyEnt.AvgRating)">
                            @nameof(SynergyEnt.AvgRating)
                        </SortArrow>
                    </th>
                    <th class="pointer" @onclick="e => SetOrder(e, nameof(SynergyEnt.NormalizedAvgGain))">
                        <SortArrow Property="@nameof(SynergyEnt.NormalizedAvgGain)">
                            Normalized
                        </SortArrow>
                    </th>
                </CascadingValue>
            </tr>
        </thead>
        <tbody>
            @{var cmdr = Commander.None;}
            @{var teammate = Commander.None;}
            @foreach (var ent in GetSortedList())
            {
                <tr>
                    <td>
                        @if (ent.Commander != cmdr)
                        {
                            cmdr = ent.Commander;
                            <div class="d-flex justify-content-start">
                                <div class="@($"preload-{cmdr.ToString().ToLower()}") commander-image">
                                </div>
                                <div class="mt-1">
                                    @cmdr
                                </div>
                            </div>
                        }
                    </td>
                    <td>
                        @if (ent.Teammate != teammate)
                        {
                            teammate = ent.Teammate;
                            <div class="d-flex justify-content-start">
                                <div class="@($"preload-{teammate.ToString().ToLower()}") commander-image">
                                </div>
                                <div class="mt-1">
                                    @teammate
                                </div>
                            </div>
                        }
                    </td>
                    <td>@ent.AvgGain.ToString("N2", CultureInfo.InvariantCulture)</td>
                    <td>@ent.Winrate().ToString("N2", CultureInfo.InvariantCulture)</td>
                    <td>@ent.Count</td>
                    <td>@ent.AvgRating.ToString("N2", CultureInfo.InvariantCulture)</td>
                    <td>@ent.NormalizedAvgGain.ToString("N2", CultureInfo.InvariantCulture)</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter, EditorRequired]
    public SynergyResponse Response { get; set; } = default!;

    List<TableOrder> tableOrders = new()
    {
        new()
        {
            Property = nameof(SynergyEnt.Commander),
            Ascending = true
        },
        new()
        {
            Property = nameof(SynergyEnt.Teammate),
            Ascending = true
        }
    };

    private void SetOrder(MouseEventArgs e, string property)
    {
        var exOrder = tableOrders.FirstOrDefault(f => f.Property == property);
        if (e.ShiftKey)
        {
            if (exOrder == null)
            {
                tableOrders.Add(new TableOrder()
                    {
                        Property = property
                    });
            }
            else
            {
                exOrder.Ascending = !exOrder.Ascending;
            }
        }
        else
        {
            tableOrders.Clear();
            tableOrders.Add(new TableOrder()
                {
                    Property = property,
                    Ascending = exOrder == null ? false : !exOrder.Ascending
                });
        }
        StateHasChanged();
    }

    private List<SynergyEnt> GetSortedList()
    {
        var query = Response.Entities.AsQueryable();

        foreach (var order in tableOrders)
        {
            if (order.Property == "Winrate")
            {
                if (order.Ascending)
                {
                    query = query.OrderBy(o => o.Winrate());
                }
                else
                {
                    query = query.OrderByDescending(o => o.Winrate());
                }
            }
            else
            {
                if (order.Ascending)
                {
                    query = query.AppendOrderBy(order.Property);
                }
                else
                {
                    query = query.AppendOrderByDescending(order.Property);
                }
            }
        }
        return query.ToList();
    }
}
