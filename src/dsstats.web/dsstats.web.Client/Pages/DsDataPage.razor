@page "/dsdata"
@using dsstats.shared
@inject NavigationManager NavigationManager

<PageTitle>dsstats - units</PageTitle>

<dsstats.razorlib.DsData.DsUnitsComponent Request="Request" OnRequestChanged="RequestChanged" />

@code {
    [SupplyParameterFromQuery]
    public string? UnitName { get; set; }

    [SupplyParameterFromQuery]
    public string? Cmdr { get; set; }

    UnitRequest Request = new()
        {
            Orders = new()
            {
                new() { Property = nameof(DsUnitListDto.Commander), Ascending = true },
                new() { Property = nameof(DsUnitListDto.Name), Ascending = true },
            }
        };

    protected override void OnInitialized()
    {
        SetRequest();
        base.OnInitialized();
    }

    private void SetRequest()
    {
        if (!string.IsNullOrEmpty(UnitName))
        {
            Request.UnitName = UnitName;
        }

        if (!string.IsNullOrEmpty(Cmdr)
            && Enum.TryParse(typeof(Commander), Cmdr, out var cmdrObj)
            && cmdrObj is Commander cmdr)
        {
            Request.Commander = cmdr;
        }
    }

    private void RequestChanged(UnitRequest request)
    {
        Dictionary<string, object?> queryDic = new();

        if (request.Commander == Commander.None)
        {
            queryDic.Add("Cmdr", null);
        }
        else
        {
            queryDic.Add("Cmdr", request.Commander.ToString());
        }

        if (string.IsNullOrEmpty(request.UnitName))
        {
            queryDic.Add("UnitName", null);
        }
        else
        {
            queryDic.Add("UnitName", request.UnitName);
        }

        NavigationManager.NavigateTo(
            NavigationManager.GetUriWithQueryParameters(
                new Dictionary<string, object?>(queryDic)));
    }
}
