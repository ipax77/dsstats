@page "/tourneys/pickban"
@using dsstats.razorlib.Tourneys
@using dsstats.shared
@layout TourneysLayout
@inject NavigationManager NavigationManager

<PageTitle>dsstats - pickban</PageTitle>

@if (Id != null && Id != Guid.Empty)
{
    <dsstats.razorlib.PickBan.PickBanComponent Guid="Id.Value" PickBanMode="PickBanMode" />
}
else
{
    <div class="bgchart2 rounded p-2">
        <h3>Pick-Ban-Helper</h3>
    </div>
    <div class="btn-group-vertical border rounded bgchart p-2 mt-2">
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.Standard))">Standard</button>
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.Commanders))">Commanders</button>
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.Name))">Name</button>
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.StdRandom))">Standard with Random</button>
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.CmdrBanOnly))">Cmdr Ban Only</button>
        <button type="button" class="btn btn-outline-light" @onclick="@(() => ChangeMode(PickBanMode.Std1v1))">Standard 1v1</button>
    </div>
}

@code {
    [SupplyParameterFromQuery]
    public Guid? Id { get; set; }

    private PickBanMode PickBanMode = PickBanMode.None;

    private void ChangeMode(PickBanMode pickBanMode)
    {
        Id = Guid.NewGuid();
        PickBanMode = pickBanMode;

        StateHasChanged();

        Dictionary<string, object?> queryDic = new();

        queryDic.Add("Id", Id);
        var uri = NavigationManager
            .GetUriWithQueryParameters(new Dictionary<string, object?>(queryDic));
        NavigationManager.NavigateTo(uri);
    }
}
