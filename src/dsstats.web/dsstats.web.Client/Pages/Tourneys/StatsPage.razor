@page "/tourneys/stats"
@using dsstats.razorlib.Tourneys
@using dsstats.shared
@layout TourneysLayout
@inject NavigationManager NavigationManager

<PageTitle>dsstats -tourneys stats </PageTitle>

<TourneyStatsComponent statsRequest="StatsRequest" OnRequestChanged="RequestChanged" />

@code {
    [SupplyParameterFromQuery]
    public string? Tourney { get; set; }
    [SupplyParameterFromQuery]
    public bool? GroupOnly { get; set; }

    TourneysStatsRequest StatsRequest = new()
    {

    };

    protected override void OnInitialized()
    {
        SetRequest();
        base.OnInitialized();
    }

    private void SetRequest()
    {
        if (!string.IsNullOrEmpty(Tourney))
        {
            StatsRequest.Tournament = Tourney;
        }
        if (GroupOnly is not null)
        {
            StatsRequest.Round = GroupOnly.Value ? "Group" : "Ro";
        }
    }

    private void RequestChanged(TourneysStatsRequest request)
    {
        Dictionary<string, object?> queryDic = new();

        if (!string.IsNullOrEmpty(request.Tournament))
        {
            queryDic.Add("Tourney", request.Tournament);
        }
        else
        {
            queryDic.Add("Tourney", null);
        }

        if (!string.IsNullOrEmpty(request.Round))
        {
            queryDic.Add("GroupOnly", request.Round.Equals("Group"));
        }
        else
        {
            queryDic.Add("GroupOnly", null);
        }

        NavigationManager.NavigateTo(
        NavigationManager.GetUriWithQueryParameters(
        new Dictionary<string, object?>(queryDic)
        )
        );
    }
}
