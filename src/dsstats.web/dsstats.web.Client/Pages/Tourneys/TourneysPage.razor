@page "/tourneys"
@using dsstats.razorlib.Tourneys
@using dsstats.shared
@using dsstats.shared.Interfaces
@layout TourneysLayout
@inject ITourneysService tourneysService
@inject NavigationManager NavigationManager

<PageTitle>dsstats - tourneys</PageTitle>

<h3>Recent Tournaments</h3>
<div class="table-responsive tableFixHead">
    <table class="tptable table w-auto">
        <thead>
            <tr>
                <th>Name</th>
                <th>Winner</th>
                <th>Mode</th>
                <th>Stats</th>
                <th>External Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tournament in tourneys)
            {
                <tr>
                    <td>@tournament.Name</td>
                    <td>@tournament.WinnerTeam</td>
                    <td>@tournament.GameMode</td>
                    <td>
                        <button type="button" class="btn btn-sm btn-outline-light"
                                @onclick="e => NavigateToStats(tournament)">
                            Stats
                        </button>
                    </td>
                    @if (string.IsNullOrEmpty(tournament.ExternalLink))
                    {
                        <td></td>
                    }
                    else
                    {
                        <td><a href="@tournament.ExternalLink">Challonge</a></td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    List<TourneyDto> tourneys = new();

    private void NavigateToStats(TourneyDto tourney)
    {
        NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameters("tourneys/stats",
            new Dictionary<string, object?>()
                        {
                    {"Tourney", tourney.Name }
                        }
        ), false);
    }

    protected override async Task OnInitializedAsync()
    {
        tourneys = await tourneysService.GetTourneys();
        await base.OnInitializedAsync();
    }
}
