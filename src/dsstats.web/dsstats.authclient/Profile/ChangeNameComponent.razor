@using System.ComponentModel.DataAnnotations
@inject IAuthService authService

<div class="bgchart p-2 rounded" style="max-width: 600px;">
    <AuthorizeView>
        <Authorized>
            <EditForm EditContext="editContext" Context="nameeditContext" FormName="changeUserName" OnValidSubmit="ChangeName">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="newname" class="form-label mt-4">New User Name</label>
                    <InputText class="form-control" id="newname" @bind-Value="newName" />
                </div>
                <div class="mt-2">
                    <button type="submit" class="btn btn-primary">Change</button>
                </div>
            </EditForm>
            <div class="mt-2">
                @if (!string.IsNullOrEmpty(message))
                {
                    @if (success)
                    {
                        <p class="text-success">@message</p>
                    }
                    else
                    {
                        <p class="text-danger">@message</p>
                    }
                }
            </div>
        </Authorized>
        <NotAuthorized>
            <p>Please login to change your name.</p>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [Parameter]
    public EventCallback OnLoading { get; set; }

    [Parameter]
    public EventCallback OnDone { get; set; }

    [Required]
    [Length(3, 100)]
    string newName = string.Empty;
    EditContext editContext = null!;

    bool success = false;
    string message = string.Empty;

    protected override void OnInitialized()
    {
        editContext = new(newName);
        base.OnInitialized();
    }

    private async Task ChangeName()
    {
        await OnLoading.InvokeAsync();
        var result = await authService.ChangeUserName(newName);
        if (result)
        {
            success = true;
            message = "User Name changed successfully.";
        }
        else
        {
            success = false;
            message = "User Name change failed, please try again later.";
        }
        await OnDone.InvokeAsync();
        await InvokeAsync(() => StateHasChanged());
    }
}
