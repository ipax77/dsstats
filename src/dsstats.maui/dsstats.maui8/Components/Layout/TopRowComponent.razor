@using dsstats.maui8.Services
@using dsstats.shared

<div class="top-row px-4 bgchart">
    <div class="row">
        <div class="col-auto">
            <h4>
                <span class="badge bg-success pointer" @onclick="@(() => NavigationManager.NavigateTo("replays"))">
                    Replays @dsstatsService.DbReplaysCount
                </span>
            </h4>
        </div>
        <div class="col-auto">
            <h4><span class="badge bg-warning pointer" @onclick="e => dsstatsService.DecodeNewReplays()">New Replays @dsstatsService.NewReplaysCount</span></h4>
        </div>
        <div class="col-auto">
            @if (decodeErrors.Count > 0)
            {
                <h4><span class="badge bg-danger pointer" @onclick="ShowErrors">Errors @decodeErrors.Count</span></h4>
            }
        </div>
        @if (decodeInfo is not null)
        {
            <div class="col-auto">
                @if (decodeInfo.Calculating)
                {
                    <h4><span class="badge bg-success">Calculating Ratings ..</span></h4>
                }
                else if (decodeInfo.Saving)
                {
                    <h4><span class="badge bg-success">Writing to database ..</span></h4>
                }
                else if (decodeInfo.Total > 0 && dsstatsService.Decoding)
                {
                    int percentage = decodeInfo.Total == 0 ? 0 : Convert.ToInt32(decodeInfo.Done * 100.0 / decodeInfo.Total);
                    <div>
                        <div>
                            @decodeInfo.Done / @decodeInfo.Total ETA @decodeInfo.Eta.ToString(@"hh\:mm\:ss")
                        </div>
                        <div class="progress">
                            <div class="progress-bar bg-success" role="progressbar"
                                 aria-label="decodestats" style="width: @(@percentage)%;"
                                 aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100">
                                @(@percentage)%
                            </div>
                        </div>
                    </div>
                }
                else if (decodeInfo.Done > 0)
                {
                    <h4><span class="badge bg-success">Decoded @decodeInfo.Done Replay@((decodeInfo.Done > 1 ? "s" : "")) in @decodeInfo.Elapsed.ToString(@"hh\:mm\:ss")</span></h4>
                }
            </div>
            @if (decodeInfo.UploadStatus != Services.UploadStatus.None)
            {
                <div class="col-auto">
                    @if (decodeInfo.UploadStatus == Services.UploadStatus.Uploading)
                    {
                        <div class="d-flex">
                            <div class="spinner-border text-success" role="status">
                                <span class="visually-hidden">Uploading...</span>
                            </div>
                            <div class="mt-1">
                                Uploading
                            </div>
                        </div>
                    }
                    else if (decodeInfo.UploadStatus == Services.UploadStatus.UploadSuccess)
                    {
                        <span class="bi bi-check2-circle text-success">&nbsp;</span> @("Upload successful")
                    }
                    else if (decodeInfo.UploadStatus == Services.UploadStatus.UploadError)
                    {
                        <span class="bi bi-exclamation-triangle text-danger">&nbsp;</span> @("Upload failed. Please try again later.")
                    }
                    else if (decodeInfo.UploadStatus == Services.UploadStatus.Forbidden)
                    {
                        <span class="bi bi-exclamation-triangle text-danger">&nbsp;</span> @("Upload forbidden due to Disable/Delete.")
                    }
                </div>
            }
        }
        @*         <div class="col-auto">
        <h4><span class="badge bg-info">@currentLocation</span></h4>
        </div> *@
        <div class="ms-auto col-auto">
            @if (currentLocation == "help")
            {
                <form name="cultureselect">
                    <fieldset>
                        <label class="form-label">
                            <select class="form-select" @bind="Culture" @bind:after="@(() => SetCulture(Culture))">
                                @foreach (var culture in configService.SupportedCultures)
                                {
                                    @* <option value="@culture">@culture.DisplayName</option> *@
                                    <option value="@culture">@culture.NativeName</option>
                                }
                            </select>
                        </label>
                    </fieldset>
                </form>
            }
        </div>
        <div class="col-auto">
            @if (updateDownloadProgress > 0)
            {
                <div class="progress" style="width: 150px;">
                    <div class="progress-bar bg-success text-warning" role="progressbar" aria-label="Update progress" style="width: @(updateDownloadProgress)%" aria-valuenow="@updateDownloadProgress" aria-valuemin="0" aria-valuemax="100">
                        Update
                    </div>
                </div>
            }
            else
            {
                <button type="button" class="btn btn-sm btn-outline-light" @onclick="e => CheckForUpdates()">Check for Updates</button>
            }
            <span class="badge bg-light p-1 mt-1">
                v@(GitHubUpdateService.CurrentVersion)
            </span>
        </div>
    </div>
</div>

<DecodeErrorModal DecodeErrors="decodeErrorsList" @ref="decodeErrorModal" OnErrorsRemoved="RemoveErrors" />
<UploadAskModal @ref="uploadAskModal" />