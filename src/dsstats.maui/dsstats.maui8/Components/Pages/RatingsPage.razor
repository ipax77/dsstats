@page "/ratings"
@using Microsoft.Extensions.Localization
@using dsstats.localization
@using dsstats.shared
@using dsstats.shared.Interfaces
@using dsstats.razorlib.Players
@using dsstats.ratings.lib
@inject IRatingService ratingService
@inject IToastService toastService
@inject IStringLocalizer<DsstatsLoc> Loc
<div>
    <div class="d-flex">
        <div>
            @if (isLoading)
            {
                <div class="spinner-border spinner-border-sm text-danger" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
            else
            {
                <div style="width: 30px;"></div>
            }
        </div>

        <div>
            <button type="button" class="btn btn-sm btn-outline-warning" @onclick="Recalc">@Loc["Recalculate Ratings"]</button>
        </div>
    </div>
</div>

<ComboRatingsComponent Request="Request" />

@code {
    RatingsRequest Request = new()
        {
            Type = RatingType.Cmdr,
            Uploaders = false
        };

    bool isLoading = false;

    async void Recalc()
    {
        if (isLoading)
        {
            return;
        }
        isLoading = true;
        await InvokeAsync(() => StateHasChanged());
        toastService.ShowWarning(Loc["Starting local rating recalculation"]);
        await Task.Run(async () =>
        {
            await ratingService.ProduceRatings(RatingCalcType.Dsstats, true);
        });
        toastService.ShowSuccess(Loc["Ratings recalculated."]);
    isLoading = false;
        await InvokeAsync(() => StateHasChanged());
    }
}
