@using dsstats.shared
@using Microsoft.AspNetCore.Components.Forms

@if (ClientBan.Locked)
{
    <div>
        @if (PbSetting.BansReady)
        {
            <div class="preload-@(ClientBan.Commander.ToString().ToLower())" alt="@ClientBan.Commander"
                style="width: 30px; height: 30px;"></div>
        }
        else
        {
            @if (ClientBan.Commander == Commander.None)
            {
                <span class="bi bi-question-lg"></span>
            }
            else
            {
                <div class="preload-@(ClientBan.Commander.ToString().ToLower())" alt="@ClientBan.Commander"
                     style="width: 30px; height: 30px;"></div>
            }
        }
    </div>
}
else
{
    <div class="d-flex">
        <div>
            <InputSelect class="form-select" @bind-Value="ClientBan.Commander">
                @foreach (var cmdr in PbSetting.AvailableCommanders)
                {
                    @if (cmdr == Commander.None)
                    {
                        continue;
                    }
                    else
                    {
                        <option value="@cmdr">@cmdr</option>
                    }
                }
            </InputSelect>
        </div>
        <div class="ms-2">
            <button type="button" class="btn btn-danger" @onclick="Lock">Lock</button>
        </div>
    </div>
}

@code {
    [CascadingParameter]
    public EditContext EditContext { get; set; } = default!;
    [CascadingParameter]
    public PickBanSetting PbSetting { get; set; } = default!;

    [Parameter, EditorRequired]
    public PickBan ClientBan { get; set; } = default!;

    [Parameter]
    public EventCallback<PickBan> OnLocked { get; set; }

    private void Lock()
    {
        if (PbSetting.AvailableCommanders.Contains(ClientBan.Commander))
        {
            OnLocked.InvokeAsync(ClientBan);
        }
    }
}
