@using System.Globalization
@using dsstats.razorlib.Services

<h4>Ih Session</h4>
<div>
    <IhUploadComp Guid="Guid" OnDecodeRequested="DecodeRequested" />
    <small class="text-info bgchart p-1 rounded">Select or drag&drop replays here to get player stats</small>
</div>

<div class="row mt-2">
    <div class="col-auto">
        <div class="table-responsive tableFixHead" style="max-height: 70vw;">
            <table class="tptable table w-auto">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>Games</th>
                        <th>Obs</th>
                        <th>Winrate</th>
                        <th>Rating <span class="bi bi-arrow-down-up"></span></th>
                        <th>In Queue</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var state in groupState.PlayerStates
                    .OrderByDescending(o => o.Games))
                    {
                        var playerStat = groupState.PlayerStats.FirstOrDefault(f => f.PlayerId == state.PlayerId);
                        <tr>
                            <td>@state.Name</td>
                            <td>@state.RatingStart</td>
                            <td>@state.Games</td>
                            <td>@state.Observer</td>
                            <td>
                                <span class="text-info">@HelperService.GetPercentageString(playerStat?.Wins, state.Games)</span>
                            </td>
                            <td>
                                @if (playerStat != null)
                                {
                                    <span class="@(playerStat.RatingChange >= 0 ? "text-success" : "text-danger")">
                                        @playerStat.RatingChange.ToString("N2", CultureInfo.InvariantCulture)
                                    </span>
                                }
                            </td>
                            <td class="pointer" @onclick="e => ChangeQueueState(state)">
                                @if (state.InQueue)
                                {
                                    <span class="bi bi-eye text-success"></span>
                                }
                                else
                                {
                                    <span class="bi bi-eye-slash text-danger"></span>
                                }
                            </td>
                            <td class="pointer" @onclick="e => RemovePlayer(state)">
                                <span class="bi bi-x-lg text-danger"></span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-auto">
        <div class="bgchart p-1 rounded" style="max-width: 500px;">
            <small class="text-info">
                Match helper - depending on player state (new, game/obs count, played with/against) it creates the most balanced teams.
                Drag and drop players for different matchups.
            </small>
        </div>
        <CascadingValue Value="groupState">
            <IhMatchComponent @ref="ihMatchComponent" OnAddPlayersRequest="e => addPlayersModal?.Show(groupState.RatingType)" />
        </CascadingValue>

    </div>
</div>

<div class="bgchart p-2 rounded" style="max-width: 500px;">
    <h4>IH Rules</h4>
    <p>If it's your first time in In-House you have to play.</p>
    <p>Invite your friends - all are welcome.</p>
    <p>All banter is welcome as long as it comes from a good place - we are here to have fun.</p>
</div>


<dsstats.razorlib.Builds.AddPlayersModal @ref="addPlayersModal" OnPlayersSelected="PlayersSelected" SinglePlayer="false" />