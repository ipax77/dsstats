@using Microsoft.AspNetCore.Components.Forms
@using dsstats.shared
@implements IDisposable

<EditForm EditContext="editContext" FormName="DistributionRequestForm">
    <div class="row">
        <div class="col-auto">
            <label class="form-label">
                Rating CalcType
                <InputSelect class="form-select" @bind-Value="Request.RatingCalcType">
                    @foreach (RatingCalcType ratingType in Enum.GetValues(typeof(RatingCalcType)))
                    {
                        <option value="@ratingType">@ratingType</option>
                    }
                </InputSelect>
            </label>
        </div>
        <div class="col-auto">
            <label class="form-label">
                Rating Type
                <span class="bi bi-info-circle pointer ms-2" onclick="window.location.href='https://github.com/ipax77/dsstats/wiki/Mmr-calculation#rating-types'"></span>
                <InputSelect class="form-select" @bind-Value="Request.RatingType">
                    @foreach (RatingType ratingType in Enum.GetValues(typeof(RatingType)))
                    {
                        @if (ratingType == RatingType.None)
                        {
                            continue;
                        }
                        <option value="@ratingType">@Data.GetRatingTypeLongName(ratingType)</option>
                    }
                </InputSelect>
            </label>
        </div>
    </div>
</EditForm>


@code {
    [CascadingParameter, EditorRequired]
    public DistributionRequest Request { get; set; } = default!;

    [Parameter]
    public EventCallback OnRequestChanged { get; set; }

    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new EditContext(Request);
        editContext.OnFieldChanged += FieldChanged;
        base.OnInitialized();
    }

    private void FieldChanged(object? sedner, FieldChangedEventArgs e)
    {
        OnRequestChanged.InvokeAsync();
    }

    public void Dispose()
    {
        editContext.OnFieldChanged -= FieldChanged;
    }
}
