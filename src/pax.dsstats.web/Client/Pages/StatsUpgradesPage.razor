@page "/armyvalues"
@page "/misc/armyvalues"
@layout MiscLayout
@using pax.dsstats.shared
@inject NavigationManager NavigationManager

<PageTitle>ArmyValues</PageTitle>
<title>Direct Strike - Army value comparsion</title>

@*<sc2dsstats.razorlib.BuildsComponent BuildRequest="buildRequest" Players="players" OnRequestChanged="RequestChanged"></sc2dsstats.razorlib.BuildsComponent>*@

<sc2dsstats.razorlib.StatsUpgrades.StatsUpgradesComponent BuildRequest="buildRequest" OnRequestChanged="SetRequest"></sc2dsstats.razorlib.StatsUpgrades.StatsUpgradesComponent>
@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Timespan { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Interest { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Versus { get; set; }

    private BuildRequest buildRequest = new()
        {
            PlayerNames = Data.GetDefaultRequestNames(),
            Interest = Commander.Abathur,
        };

    protected override void OnInitialized()
    {
        SetRequest();
        base.OnInitialized();
    }

    private void SetRequest()
    {
        if (!String.IsNullOrEmpty(Timespan)
            && Enum.TryParse(typeof(TimePeriod), Timespan, out var timePeriodObj)
            && timePeriodObj is TimePeriod timePeriod)
        {
            buildRequest.Timespan = timePeriod;
        }

        if (Enum.TryParse(typeof(Commander), Interest, out object? interestObj))
        {
            if (interestObj is Commander interest)
            {
                buildRequest.Interest = interest;
            }
        }

        if (Enum.TryParse(typeof(Commander), Versus, out object? versusObj))
        {
            if (versusObj is Commander versus)
            {
                buildRequest.Versus = versus;
            }
        }
    }

    private void RequestChanged()
    {
        Dictionary<string, object?> queryDic = new();

        queryDic.Add("Timespan", buildRequest.Timespan.ToString());
        queryDic.Add("Interest", buildRequest.Interest.ToString());
        queryDic.Add("Versus", buildRequest.Versus.ToString());

        NavigationManager.NavigateTo(
            NavigationManager.GetUriWithQueryParameters(
                new Dictionary<string, object?>(queryDic)
            )
        );
    }
}
