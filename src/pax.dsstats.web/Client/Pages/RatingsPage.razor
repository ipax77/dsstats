@page "/ratings"
@using pax.dsstats.shared
@inject NavigationManager NavigationManager

<PageTitle>Ratings</PageTitle>
<title>Direct Strike - Player ratings and stats</title>

<sc2dsstats.razorlib.PlayerRatings RatingsRequest="ratingsRequest" OnRatingsChanged="SetUrl"></sc2dsstats.razorlib.PlayerRatings>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int? ToonId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Mode { get; set; }

    private RatingsRequest ratingsRequest = new()
    {
        Type = shared.RatingType.Cmdr,
        Skip = 0,
        Take = 20,
        Orders = new()
        {
            new()
            {
                Property = "Rating",
                Ascending = false
            },
        },
        Uploaders = true
    };

    protected override void OnInitialized()
    {
        SetRequest();
        base.OnInitialized();
    }

    private void SetRequest()
    {
        ratingsRequest.ToonId = ToonId;
        if (!String.IsNullOrEmpty(Mode) 
            && Enum.TryParse(typeof(RatingType), Mode, out var ratingTypeObject))
        {
            if (ratingTypeObject is RatingType ratingType)
            {
                ratingsRequest.Type = ratingType;
            }
        }
    }

    private void SetUrl()
    {
        Dictionary<string, object?> queryDic = new();

        if (ratingsRequest.ToonId != null && ratingsRequest.ToonId > 0)
        {
            queryDic.Add("ToonId", ratingsRequest.ToonId.Value);
        }
        else
        {
            queryDic.Add("ToonId", null);
        }

        if (ratingsRequest.Type != shared.RatingType.Cmdr)
        {
            queryDic.Add("Mode", ratingsRequest.Type.ToString());
        }
        else
        {
            queryDic.Add("Mode", null);
        }

        NavigationManager.NavigateTo(
            NavigationManager.GetUriWithQueryParameters(
                new Dictionary<string, object?>(queryDic)
            )
        );
    }
}
